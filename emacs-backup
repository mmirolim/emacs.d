;;; mmirolim_config --- Summary custom emacs configuration
;;; Commentary:
;;; Mostly used for golang development
;;; Code:
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(coffee-tab-width 2)
 '(column-number-mode t)
 '(custom-enabled-themes '(wombat))
 '(desktop-save-mode 1)
 '(display-time-mode t)
 '(help-at-pt-display-when-idle '(flymake-overlay) nil (help-at-pt))
 '(help-at-pt-timer-delay 0.9)
 '(markdown-command "pandoc")
 '(package-selected-packages
   '(ein py-autopep8 elpy ## php-mode solidity-flycheck company-solidity solidity-mode web-mode rjsx-mode yasnippet-snippets magit let-alist ccls company-lsp lsp-ui ggtags arduino-mode racer flycheck-rust rust-auto-use rust-mode cargo csv-mode coffee-mode protobuf-mode expand-region flycheck-plantuml plantuml-mode go-rename ace-window flycheck-gometalinter flycheck yaml-mode js2-mode go-errcheck go-mode smex which-key clj-refactor aggressive-indent rainbow-delimiters syntax-subword cider paredit clojure-mode go-direx go-dlv go-scratch go-guru gotest go-eldoc undo-tree scala-mode2 neotree markdown-mode lua-mode goto-chg f ensime company company-go caml auto-complete))
 '(plantuml-jar-path "/usr/share/java/plantuml.jar")
 '(save-place-mode 1)
 '(set-frame-font 13)
 '(show-paren-mode t)
 '(tls-checktrust t)
 '(tool-bar-mode nil))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:family "Source Code Pro" :foundry "ADBO" :slant normal :weight normal :height 128 :width normal)))))
;; Hide the startup message
(setq inhibit-startup-message t)
;; turn off alarm bell
(setq ring-bell-function 'ignore)
(require 'package)
(push '("melpa" . "https://melpa.org/packages/")
      package-archives)
(push '("gnu" . "https://elpa.gnu.org/packages/")
	package-archives)
(package-initialize)
(show-paren-mode 1)
(electric-pair-mode 1)
(menu-bar-mode -1)
(tool-bar-mode -1)
(scroll-bar-mode -1)
(elpy-enable)
;; Enable Flycheck
(when (require 'flycheck nil t)
  (setq elpy-modules (delq 'elpy-module-flymake elpy-modules))
  (add-hook 'elpy-mode-hook 'flycheck-mode))
;; Enable autopep8 python
(require 'py-autopep8)
(add-hook 'elpy-mode-hook 'py-autopep8-enable-on-save)
;; Use IPython for REPL
(setq python-shell-interpreter "ipython"
      python-shell-interpreter-args "-i --simple-prompt"
      python-shell-prompt-detect-failure-warning nil)

(load "~/.emacs.d/go.el")
(load "~/.emacs.d/clj.el")
(load "~/.emacs.d/tss.el")
(load "~/.emacs.d/rust.el")
(load "~/.emacs.d/c_cpp.el")
(load "~/.emacs.d/sol.el")
(global-set-key [f8] 'neotree-toggle)
;; smex configuration
(smex-initialize)
(global-set-key (kbd "M-x") 'smex)
(global-set-key (kbd "M-X") 'smex-major-mode-commands)
;; This is your old M-x.
(global-set-key (kbd "C-c C-c M-x") 'execute-extended-command)
(global-set-key (kbd "M-p") 'ace-window)
;; plantuml configuration
;; Enable plantuml-mode for PlantUML files
(add-to-list 'auto-mode-alist '("\\.plantuml\\'" . plantuml-mode))
(add-to-list 'auto-mode-alist '("\\BUILD\\'" . python-mode))
;; multiple-cursor
(global-set-key (kbd "C-S-<mouse-1>") 'mc/add-cursor-on-click)

;; ido configuration
(progn
  ;; make buffer switch command do suggestions, also for find-file command
  (require 'ido)
  (ido-mode 1)

  ;; show choices vertically
  (progn
    (make-local-variable 'ido-decorations)
    (setf (nth 2 ido-decorations) "\n"))

  ;; show any name that has the chars you typed
  (setq ido-enable-flex-matching t)
  ;; use current pane for newly opened file
  (setq ido-default-file-method 'selected-window)
  ;; use current pane for newly switched buffer
  (setq ido-default-buffer-method 'selected-window)
  ;; stop ido from suggesting when naming new file
  (define-key (cdr ido-minor-mode-map-entry) [remap write-file] nil))
;;; .emacs ends here
 
